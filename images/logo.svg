<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xml:space="preserve"
   width="85.056396mm"
   height="59.053337mm"
   version="1.1"
   style="clip-rule:evenodd;fill-rule:evenodd;image-rendering:optimizeQuality;shape-rendering:geometricPrecision;text-rendering:geometricPrecision"
   viewBox="0 0 8505.6514 5905.3417"
   id="svg190"
   sodipodi:docname="logo.svg"
   inkscape:version="1.0.2-2 (e86c870879, 2021-01-15)"><metadata
   id="metadata194"><rdf:RDF><cc:Work
       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /><dc:title></dc:title></cc:Work></rdf:RDF></metadata><sodipodi:namedview
   pagecolor="#ffffff"
   bordercolor="#666666"
   borderopacity="1"
   objecttolerance="10"
   gridtolerance="10"
   guidetolerance="10"
   inkscape:pageopacity="0"
   inkscape:pageshadow="2"
   inkscape:window-width="1366"
   inkscape:window-height="715"
   id="namedview192"
   showgrid="false"
   inkscape:zoom="0.98561373"
   inkscape:cx="246.35493"
   inkscape:cy="227.42931"
   inkscape:window-x="-8"
   inkscape:window-y="-8"
   inkscape:window-maximized="1"
   inkscape:current-layer="Camada_x0020_1" />
 <defs
   id="defs148">
  <font
   id="FontID0"
   horiz-adv-x="722"
   font-variant="normal"
   style="fill-rule:nonzero"
   font-style="normal"
   font-weight="700"
   horiz-origin-x="0"
   horiz-origin-y="0"
   vert-origin-x="512"
   vert-origin-y="768"
   vert-adv-y="1024">
	<font-face
   font-family="Arial"
   id="font-face103">
		<font-face-src>
			<font-face-name
   name="Arial Negrito" />
		</font-face-src>
	</font-face>
   <missing-glyph
   id="missing-glyph107"><path
     d="M0 0z"
     id="path105" /></missing-glyph>
   <glyph
   unicode="R"
   horiz-adv-x="722"
   d="M72.997 0l0 715.998 304.506 0c76.4958,0 132.158,-6.49771 166.828,-19.3341 34.84,-12.825 62.5007,-35.6693 83.3343,-68.4986 20.8336,-32.9997 31.3299,-70.4979 31.3299,-112.835 0,-53.8333 -15.6649,-98.1586 -47.1652,-133.158 -31.5003,-35.0104 -78.4951,-57.0026 -141.166,-66.1699 31.1708,-18.1641 56.8323,-38.1684 77.007,-60.0016 20.3337,-21.8332 47.665,-60.6718 81.9938,-116.334l87.3329 -139.667 -172.825 0 -103.668 156.331c-37.1687,55.5032 -62.6711,90.5022 -76.5071,104.997 -13.6656,14.3359 -28.1605,24.3437 -43.496,29.6714 -15.5059,5.33903 -39.8382,7.99718 -73.1674,7.99718l-29.3306 0 0 -298.997 -145.006 0zm145.006 413.002l106.996 0c69.3392,0 112.506,2.99894 129.829,8.82644 17.1758,5.83885 30.8414,16.0057 40.5085,30.3416 9.82608,14.3245 14.6653,32.3295 14.6653,53.8333 0,24.1619 -6.49771,43.496 -19.3341,58.5021 -12.8364,14.8243 -31.0004,24.1619 -54.3331,27.9901 -11.8367,1.66987 -47.0062,2.49912 -105.497,2.49912l-112.835 0 0 -181.993z"
   id="glyph109" />
   <glyph
   unicode="T"
   horiz-adv-x="610"
   d="M233.997 0l0 594.991 -211.989 0 0 121.001 567.991 0 0 -121.001 -210.986 0 0 -594.991 -145.016 0z"
   id="glyph111" />
   <glyph
   unicode="U"
   horiz-adv-x="722"
   d="M72.997 715.998l145.006 0 0 -388c0,-61.6601 1.8289,-101.498 5.32767,-119.662 6.16828,-29.3306 20.6745,-53.0041 43.6664,-70.6683 23.1737,-17.8346 54.6739,-26.6724 94.6712,-26.6724 40.4971,0 71.1681,8.33797 91.8313,25.173 20.6632,16.835 32.9997,37.3278 37.1687,61.8305 4.16899,24.5027 6.32732,64.9998 6.32732,121.673l0 396.326 145.006 0 0 -376.492c0,-86.0038 -3.83956,-146.835 -11.6663,-182.333 -7.83815,-35.5102 -22.1626,-65.4997 -43.1666,-90.0024 -20.8336,-24.5027 -48.8351,-43.8368 -83.8341,-58.3317 -35.1694,-14.5063 -80.8352,-21.8332 -137.338,-21.8332 -68.1578,0 -119.833,7.82679 -154.991,23.6621 -35.1694,15.8353 -63.0005,36.3281 -83.5047,61.6715 -20.5041,25.332 -33.829,51.6636 -40.3381,79.4947 -9.49665,40.9969 -14.1655,101.669 -14.1655,181.834l0 382.331z"
   id="glyph113" />
   <glyph
   unicode="a"
   horiz-adv-x="556"
   d="M173.998 359.013l-123.987 21.9814c13.9765,50.6808 38.1457,88.1831 72.3276,112.507 34.1561,24.3237 84.9914,36.4984 152.326,36.4984 61.1567,0 106.844,-7.15554 136.83,-21.6725 29.8319,-14.4913 51.0154,-32.8177 63.1644,-55.1595 12.1747,-22.3418 18.3522,-63.1644 18.3522,-122.828l-2.00767 -159.996c0,-45.5072 2.16211,-79.1743 6.48632,-100.847 4.34995,-21.6725 12.5093,-44.838 24.5039,-69.4963l-136.007 0c-3.47481,9.00878 -7.9792,22.3418 -13.1528,39.999 -2.16211,8.15938 -3.83517,13.5132 -4.839,16.0099 -23.3199,-23.011 -48.3385,-40.1791 -75.0045,-51.6846 -26.666,-11.4798 -54.9793,-17.3226 -85.1458,-17.3226 -53.1775,0 -95.1842,14.4913 -125.84,43.4995 -30.6813,28.8281 -45.9962,65.5067 -45.9962,109.83 0,29.1627 7.00111,55.3396 21.0033,78.3249 13.9765,22.8566 33.4869,40.5138 58.8144,52.6885 25.1731,12.149 61.5171,22.8308 109.006,31.994 63.9881,11.9945 108.491,23.3199 133.175,33.6671l0 13.822c0,26.666 -6.51206,45.6616 -19.5104,57.1671 -13.1528,11.3511 -37.8369,17.0137 -74.0007,17.0137 -24.5039,0 -43.4995,-4.839 -57.1671,-14.6714 -13.822,-9.678 -24.8385,-26.8462 -33.3325,-51.3243zm184.011 -111.014c-17.5028,-5.84284 -45.3528,-12.8439 -83.4985,-21.0033 -38.017,-8.15938 -63.01,-16.1643 -74.6699,-23.8347 -17.8374,-12.8182 -26.8462,-28.8281 -26.8462,-48.3385 0,-19.3303 7.18128,-35.8292 21.5181,-49.8314 14.3111,-14.0022 32.4831,-21.0033 54.6447,-21.0033 24.684,0 48.3385,8.18512 70.8347,24.3494 16.4989,12.4836 27.5154,27.4896 32.6633,45.5072 3.50055,11.6599 5.35379,34.0017 5.35379,66.8194l0 27.3352z"
   id="glyph115" />
   <glyph
   unicode="d"
   horiz-adv-x="610"
   d="M547.991 0l-126.998 0 0 76.1628c-21.1578,-29.6517 -46.3309,-51.8391 -75.1589,-66.8194 -28.8281,-14.8516 -57.9908,-22.3418 -87.3337,-22.3418 -59.844,0 -110.988,23.9891 -153.664,72.1732 -42.4957,48.1583 -63.8336,115.158 -63.8336,201.333 0,88.0029 20.6687,155.002 62.1606,200.819 41.4919,45.8418 93.8457,68.6726 157.165,68.6726 58.0165,0 108.337,-24.1693 150.678,-72.3276l0 258.32 136.985 0 0 -715.992zm-365.988 269.491c0,-55.4941 7.67033,-95.6475 22.8308,-120.486 22.1616,-36.0094 52.9973,-54.0012 92.6617,-54.0012 31.505,0 58.3254,13.4874 80.3326,40.488 22.1616,27.0006 33.178,67.1797 33.178,120.846 0,59.8183 -10.6818,102.829 -32.1742,129.16 -21.4924,26.3314 -48.8276,39.5099 -82.3402,39.5099 -32.4831,0 -59.6638,-12.9984 -81.671,-39.0209 -21.827,-25.9968 -32.8177,-64.8117 -32.8177,-116.496z"
   id="glyph117" />
   <glyph
   unicode="e"
   horiz-adv-x="556"
   d="M372.005 163.999l136.997 -23.0033c-17.5052,-50.1641 -45.3363,-88.3325 -83.1639,-114.664 -38.0093,-26.1612 -85.504,-39.3271 -142.336,-39.3271 -90.1728,0 -157.002,29.501 -200.168,88.4916 -34.1698,47.3356 -51.3342,107.008 -51.3342,179.176 0,85.9924 22.5034,153.491 67.3286,202.156 44.8365,48.8351 101.669,73.1674 170.338,73.1674 76.9956,0 137.838,-25.491 182.504,-76.4958 44.4957,-51.0048 65.8291,-129.17 63.8298,-234.497l-343.004 0c0.999648,-40.6675 12.0071,-72.3382 33.1701,-95.0006 21.004,-22.6738 47.3356,-33.9994 78.6655,-33.9994 21.5038,0 39.4974,5.82749 54.0037,17.4938 14.6653,11.6663 25.6614,30.5006 33.1701,56.5028zm7.99718 138.996c-0.999648,39.8382 -11.1665,70.1685 -30.671,90.843 -19.4931,20.8336 -43.1666,31.1595 -71.1681,31.1595 -29.8304,0 -54.4922,-10.9961 -73.9967,-32.8293 -19.5045,-21.8332 -29.0011,-51.6636 -28.6717,-89.1731l204.508 0z"
   id="glyph119" />
   <glyph
   unicode="g"
   horiz-adv-x="610"
   d="M58.9946 -32.9979l157.01 -18.9957c2.65115,-18.5066 8.67417,-31.1704 17.9918,-38.1715 13.1786,-9.83244 33.6671,-14.8259 61.6715,-14.8259 35.8292,0 62.6753,5.32805 80.6672,16.1643 11.9945,7.15554 21.1578,18.661 27.3352,34.6709 4.16978,11.3253 6.33188,32.4831 6.33188,62.9842l0.669223 75.8282c-41.3374,-56.4979 -93.3309,-84.6568 -156.006,-84.6568 -69.6765,0 -124.99,29.4973 -165.659,88.3375 -31.994,46.4853 -48.0039,104.502 -48.0039,173.663 0,86.999 21.0033,153.329 62.8298,199.171 41.8265,45.8161 94.0002,68.8271 156.341,68.8271 64.1682,0 117.166,-28.1589 158.838,-84.5023l0 73.5116 127.976 0 0 -465.342c0,-61.1567 -4.99344,-106.999 -15.1605,-137.165 -9.98687,-30.3467 -24.1693,-54.0012 -42.4957,-71.3238 -18.172,-17.1682 -42.4957,-30.8358 -72.9968,-40.5138 -30.5011,-9.83244 -69.0072,-14.6714 -115.493,-14.6714 -88.0029,0 -150.344,15.1862 -187.177,45.3528 -36.833,30.321 -55.1595,68.4924 -55.1595,114.978 0,4.50439 0.154436,10.167 0.489048,16.6791zm123.008 303.004c0,-55.005 10.6561,-95.1842 31.8396,-120.666 21.3122,-25.5077 47.6693,-38.3517 78.8139,-38.3517 33.3325,0 61.6715,13.1786 84.6825,39.3555 23.1654,26.1512 34.6709,64.8117 34.6709,116.162 0,53.6666 -11.0164,93.4854 -33.178,119.482 -22.0072,26.0225 -49.9858,39.0209 -83.8331,39.0209 -32.8434,0 -59.844,-12.8439 -81.1562,-38.3517 -21.1835,-25.482 -31.8396,-64.3227 -31.8396,-116.651z"
   id="glyph121" />
   <glyph
   unicode="i"
   horiz-adv-x="277"
   d="M71.9974 588.997l0 127.001 136.997 0 0 -127.001 -136.997 0zm0 -588.997l0 518.999 136.997 0 0 -518.999 -136.997 0z"
   id="glyph123" />
   <glyph
   unicode="l"
   horiz-adv-x="277"
   d="M71.993 0l0 715.992 137.011 0 0 -715.992 -137.011 0z"
   id="glyph125" />
   <glyph
   unicode="m"
   horiz-adv-x="889"
   d="M62.0061 519.009l125.994 0 0 -70.8347c45.1726,54.4902 98.9936,81.8254 161.489,81.8254 33.178,0 62.0061,-6.82093 86.3556,-20.4885 24.4781,-13.6676 44.4776,-34.3363 59.9985,-62.0061 22.8308,27.6698 47.4891,48.3385 73.8205,62.0061 26.3314,13.6676 54.4902,20.4885 84.5023,20.4885 37.9913,0 70.1655,-7.67033 96.677,-23.1654 26.3314,-15.4951 45.9962,-38.1715 58.9946,-68.1578 9.49783,-22.0072 14.1566,-57.8363 14.1566,-107.333l0 -331.343 -136.985 0 0 296.157c0,51.5045 -4.68456,84.6825 -14.1824,99.5084 -12.6638,19.5104 -32.3286,29.3429 -58.66,29.3429 -19.1758,0 -37.3221,-5.84284 -54.3358,-17.5028 -16.8335,-11.8401 -29.1627,-29.0083 -36.6529,-51.5045 -7.51589,-22.6764 -11.1709,-58.3254 -11.1709,-107.179l0 -248.822 -137.011 0 0 284.008c0,50.3205 -2.49672,82.9837 -7.33572,97.5007 -4.839,14.6457 -12.3292,25.6621 -22.6506,32.8177 -10.167,7.18128 -24.1693,10.6818 -41.672,10.6818 -21.1835,0 -40.1791,-5.66266 -57.0127,-17.0137 -16.988,-11.5055 -28.9825,-27.8243 -36.3182,-49.3166 -7.33572,-21.5181 -11.0164,-57.1671 -11.0164,-106.844l0 -251.834 -136.985 0 0 519.009z"
   id="glyph127" />
   <glyph
   unicode="n"
   horiz-adv-x="610"
   d="M544.002 0l-136.997 0 0 264.498c0,56.003 -2.99894,92.1721 -8.8378,108.507 -5.99789,16.4942 -15.4945,29.1602 -28.8308,38.3274 -13.3362,9.16723 -29.3306,13.6656 -48.0058,13.6656 -23.9915,0 -45.4953,-6.49771 -64.5,-19.4931 -19.1637,-13.0068 -32.1591,-30.3416 -39.168,-51.675 -7.15657,-21.4924 -10.6667,-61.1603 -10.6667,-119.163l0 -234.667 -136.997 0 0 518.999 127.001 0 0 -76.1664c45.5067,58.1727 102.668,87.1625 171.837,87.1625 30.3302,0 58.1613,-5.49806 83.3343,-16.3238 25.332,-11.0075 44.3253,-24.8435 57.1617,-41.6671 13.0068,-17.0054 22.0036,-36.1691 27.0019,-57.6729 5.16863,-21.4924 7.66775,-52.1634 7.66775,-92.1607l0 -322.171z"
   id="glyph129" />
   <glyph
   unicode="o"
   horiz-adv-x="610"
   d="M39.9973 265.838c0,45.6657 11.1665,89.832 33.67,132.499 22.5034,42.8258 54.3331,75.3257 95.5004,97.8292 41.1673,22.5034 87.0034,33.829 137.838,33.829 78.4951,0 142.666,-25.491 192.83,-76.4958 50.1641,-51.1638 75.1667,-115.505 75.1667,-193.5 0,-78.6655 -25.332,-143.836 -75.8369,-195.499 -50.664,-51.6636 -114.335,-77.4954 -191.16,-77.4954 -47.506,0 -92.8423,10.8257 -136.009,32.3295 -42.9962,21.5038 -75.8256,53.0041 -98.329,94.6712 -22.5034,41.4967 -33.67,92.1607 -33.67,151.833zm141.007 -7.33832c0,-51.5046 12.1662,-91.002 36.4985,-118.333 24.5027,-27.5017 54.4922,-41.1673 90.3318,-41.1673 35.6693,0 65.67,13.6656 89.832,41.1673 24.1619,27.3313 36.3281,67.1695 36.3281,119.333 0,50.8344 -12.1662,90.0024 -36.3281,117.334 -24.1619,27.5017 -54.1627,41.1673 -89.832,41.1673 -35.8396,0 -65.8291,-13.6656 -90.3318,-41.1673 -24.3323,-27.3313 -36.4985,-66.8287 -36.4985,-118.333z"
   id="glyph131" />
   <glyph
   unicode="p"
   horiz-adv-x="610"
   d="M67.9988 518.999l128 0 0 -76.1664c16.6646,26.0022 38.9976,47.0062 67.3286,63.1709 28.3423,15.9944 59.8426,23.9915 94.3418,23.9915 60.1606,0 111.336,-23.6621 153.332,-70.9977 41.9966,-47.1652 63.0005,-113.165 63.0005,-197.499 0,-86.833 -21.1744,-154.162 -63.5004,-202.326 -42.3374,-48.1762 -93.6715,-72.1678 -154.003,-72.1678 -28.6717,0 -54.6626,5.6571 -77.9953,17.1644 -23.1737,11.3256 -47.8354,30.83 -73.5082,58.5021l0 -259.67 -136.997 0 0 715.998zm134.998 -251.502c0,-58.5021 11.5073,-101.669 34.6696,-129.659 23.0033,-27.8425 51.1638,-41.8375 84.1635,-41.8375 31.8411,0 58.3317,12.8364 79.5061,38.4978 21.163,25.6728 31.6593,67.6693 31.6593,126.171 0,54.6626 -10.8257,95.1597 -32.6589,121.662 -21.6742,26.502 -48.6647,39.6678 -80.8352,39.6678 -33.4996,0 -61.3307,-12.9954 -83.3343,-38.9976 -22.1626,-26.0022 -33.1701,-64.5 -33.1701,-115.505z"
   id="glyph133" />
   <glyph
   unicode="r"
   horiz-adv-x="389"
   d="M202.997 0l-136.997 0 0 518.999 127.001 0 0 -73.6672c21.8332,34.84 41.4967,57.6729 59.0019,68.4986 17.4938,10.8371 37.3278,16.1648 59.5018,16.1648 31.3299,0 61.5011,-8.6674 90.4908,-25.8318l-42.4964 -119.662c-23.1623,14.9947 -44.6661,22.5034 -64.5,22.5034 -19.3341,0 -35.6693,-5.33903 -48.9941,-15.8353 -13.3362,-10.6667 -23.8325,-29.6714 -31.5003,-57.3321 -7.66775,-27.6721 -11.5073,-85.6744 -11.5073,-173.836l0 -160z"
   id="glyph135" />
   <glyph
   unicode="s"
   horiz-adv-x="556"
   d="M23.0033 146.005l137.997 20.9926c5.83885,-26.502 17.6642,-46.6654 35.6693,-60.331 17.8346,-13.836 42.9962,-20.6632 75.1667,-20.6632 35.4989,0 62.1599,6.49771 80.1649,19.4931 11.9958,9.16723 17.9937,21.5038 17.9937,36.8393 0,10.3259 -3.32837,18.9933 -9.82608,25.8318 -6.8385,6.49771 -22.174,12.666 -45.8361,18.1641 -110.836,24.5027 -181.004,46.8358 -210.664,66.9991 -41.1673,28.1719 -61.6715,67.1695 -61.6715,117.004 0,45.1659 17.8346,82.9935 53.3335,113.665 35.4989,30.671 90.5022,45.9952 164.999,45.9952 71.0091,0 123.843,-11.6663 158.342,-34.8286 34.4992,-23.3327 58.3317,-57.6615 71.3271,-103.168l-129 -24.0029c-5.49806,20.3337 -16.1648,36.01 -31.6593,46.8358 -15.5059,10.8371 -37.6685,16.1648 -66.5107,16.1648 -36.3281,0 -62.3303,-4.99824 -78.1656,-15.1651 -10.4963,-7.16793 -15.6649,-16.4942 -15.6649,-27.8311 0,-9.83744 4.49842,-18.1641 13.6656,-25.0026 12.507,-9.16723 55.3328,-21.9923 128.671,-38.6682 73.3378,-16.6646 124.502,-36.9983 153.503,-61.1603 28.8308,-24.3323 43.1666,-58.5021 43.1666,-102.169 0,-47.4946 -19.8339,-88.5029 -59.6722,-122.661 -39.6678,-34.1698 -98.4994,-51.3342 -176.495,-51.3342 -70.6683,0 -126.671,14.3245 -167.998,42.8258 -41.1673,28.5013 -68.1692,67.1695 -80.8352,116.175z"
   id="glyph137" />
   <glyph
   unicode="t"
   horiz-adv-x="332"
   d="M309.005 518.999l0 -108.996 -94.001 0 0 -210.165c0,-42.6668 0.829253,-67.5103 2.65815,-74.5078 1.84026,-6.99753 5.83885,-12.8364 12.3366,-17.4938 6.33868,-4.49842 14.0064,-6.8385 23.1737,-6.8385 12.825,0 31.1595,4.33938 55.3328,13.1658l11.496 -106.667c-31.8297,-13.6656 -67.8397,-20.4928 -108.166,-20.4928 -24.6731,0 -46.8358,4.15763 -66.6697,12.4956 -19.8339,8.33797 -34.3288,19.1637 -43.496,32.3295 -9.33762,13.3362 -15.6649,31.1708 -19.3341,53.8333 -2.83991,16.0057 -4.33938,48.3352 -4.33938,97.1703l0 227.17 -63.0005 0 0 108.996 63.0005 0 0 102.998 137.009 81.0056 0 -184.003 94.001 0z"
   id="glyph139" />
   <glyph
   unicode="u"
   horiz-adv-x="610"
   d="M414.996 0l0 77.6557c-18.9957,-27.6441 -43.8341,-49.6512 -74.6699,-66.1502 -30.8358,-16.3445 -63.3188,-24.5039 -97.5007,-24.5039 -34.9798,0 -66.3303,7.67033 -94.0002,23.011 -27.8243,15.3149 -47.8237,36.9875 -60.1529,64.6573 -12.5093,27.8243 -18.661,66.1759 -18.661,115.158l0 329.181 136.985 0 0 -239.016c0,-73.1513 2.49672,-117.835 7.67033,-134.334 4.99344,-16.4989 14.1566,-29.6517 27.6698,-39.1496 13.333,-9.678 30.321,-14.517 50.9897,-14.517 23.5,0 44.5034,6.51206 63.1644,19.3303 18.6868,12.8439 31.3505,28.8538 38.1715,48.0039 6.84667,19.1758 10.3472,65.8413 10.3472,140.331l0 219.351 136.985 0 0 -519.009 -126.998 0z"
   id="glyph141" />
   <glyph
   unicode="ó"
   horiz-adv-x="610"
   d="M39.9973 265.838c0,45.6657 11.1665,89.832 33.67,132.499 22.5034,42.8258 54.3331,75.3257 95.5004,97.8292 41.1673,22.5034 87.0034,33.829 137.838,33.829 78.4951,0 142.666,-25.491 192.83,-76.4958 50.1641,-51.1638 75.1667,-115.505 75.1667,-193.5 0,-78.6655 -25.332,-143.836 -75.8369,-195.499 -50.664,-51.6636 -114.335,-77.4954 -191.16,-77.4954 -47.506,0 -92.8423,10.8257 -136.009,32.3295 -42.9962,21.5038 -75.8256,53.0041 -98.329,94.6712 -22.5034,41.4967 -33.67,92.1607 -33.67,151.833zm141.007 -7.33832c0,-51.5046 12.1662,-91.002 36.4985,-118.333 24.5027,-27.5017 54.4922,-41.1673 90.3318,-41.1673 35.6693,0 65.67,13.6656 89.832,41.1673 24.1619,27.3313 36.3281,67.1695 36.3281,119.333 0,50.8344 -12.1662,90.0024 -36.3281,117.334 -24.1619,27.5017 -54.1627,41.1673 -89.832,41.1673 -35.8396,0 -65.8291,-13.6656 -90.3318,-41.1673 -24.3323,-27.3313 -36.4985,-66.8287 -36.4985,-118.333zm64.0002 327.498l67.9988 146.005 152.992 0 -134.998 -146.005 -85.9924 0z"
   id="glyph143" />
  </font>
  <style
   type="text/css"
   id="style146">
   <![CDATA[
    @font-face { font-family:"Arial";font-variant:normal;font-style:normal;font-weight:bold;src:url("#FontID0") format(svg)}
    .fil0 {fill:#9C3234}
    .fil1 {fill:#BDD0E3}
    .fil7 {fill:#FEFEFE;fill-rule:nonzero}
    .fil5 {fill:#DC3438;fill-rule:nonzero}
    .fil4 {fill:#DCE8F6;fill-rule:nonzero}
    .fil2 {fill:#9C3234;fill-rule:nonzero}
    .fil6 {fill:#BDD0E3;fill-rule:nonzero}
    .fil3 {fill:#642D2B;fill-rule:nonzero}
    .fnt1 {font-weight:bold;font-size:388.51px;font-family:'Arial'}
    .fnt0 {font-weight:bold;font-size:880.31px;font-family:'Arial'}
   ]]>
  </style>
 <meshgradient
   inkscape:collect="always"
   id="meshgradient227"
   gradientUnits="userSpaceOnUse"
   x="2111.2556"
   y="505.82001"><meshrow
     id="meshrow2557"><meshpatch
       id="meshpatch2559"><stop
         path="c 3107.72,0  6215.45,0  9323.17,0"
         style="stop-color:#ffffff;stop-opacity:1"
         id="stop2561" /><stop
         path="c 0,3200.29  -26.8452,3447.68  -26.8446,6647.97"
         style="stop-color:#000000;stop-opacity:1"
         id="stop2563" /><stop
         path="c -3107.72,0.0285304  -6188.6,-53.719  -9296.33,-53.6891"
         style="stop-color:#ffffff;stop-opacity:1"
         id="stop2565" /><stop
         path="c 0.00540009,-3200.26  0.0057,-3393.95  0,-6594.28"
         style="stop-color:#000000;stop-opacity:1"
         id="stop2567" /></meshpatch></meshrow></meshgradient><meshgradient
   inkscape:collect="always"
   id="meshgradient2569"
   gradientUnits="userSpaceOnUse"
   x="2111.2556"
   y="505.82001"><meshrow
     id="meshrow2581"><meshpatch
       id="meshpatch2579"><stop
         path="c 3107.72,0  6215.45,0  9323.17,0"
         style="stop-color:#ffffff;stop-opacity:1"
         id="stop2571" /><stop
         path="c 0,3200.29  -26.8452,3447.68  -26.8446,6647.97"
         style="stop-color:#000000;stop-opacity:1"
         id="stop2573" /><stop
         path="c -3107.72,0.0285304  -6188.6,-53.719  -9296.33,-53.6891"
         style="stop-color:#ffffff;stop-opacity:1"
         id="stop2575" /><stop
         path="c 0.00540009,-3200.26  0.0057,-3393.95  0,-6594.28"
         style="stop-color:#000000;stop-opacity:1"
         id="stop2577" /></meshpatch></meshrow></meshgradient><meshgradient
   inkscape:collect="always"
   id="meshgradient2583"
   gradientUnits="userSpaceOnUse"
   x="2111.2556"
   y="505.82001"><meshrow
     id="meshrow2595"><meshpatch
       id="meshpatch2593"><stop
         path="c 3107.72,0  6215.45,0  9323.17,0"
         style="stop-color:#ffffff;stop-opacity:1"
         id="stop2585" /><stop
         path="c 0,3200.29  -26.8452,3447.68  -26.8446,6647.97"
         style="stop-color:#000000;stop-opacity:1"
         id="stop2587" /><stop
         path="c -3107.72,0.0285304  -6188.6,-53.719  -9296.33,-53.6891"
         style="stop-color:#ffffff;stop-opacity:1"
         id="stop2589" /><stop
         path="c 0.00540009,-3200.26  0.0057,-3393.95  0,-6594.28"
         style="stop-color:#000000;stop-opacity:1"
         id="stop2591" /></meshpatch></meshrow></meshgradient></defs>
 <g
   id="Camada_x0020_1"
   transform="translate(-795.87209,-22.61786)"
   style="fill:url(#meshgradient227);fill-opacity:1"
   clip-path="none">
  <metadata
   id="CorelCorpID_0Corel-Layer" />
  <g
   transform="translate(-6394.7136,-2267.8221)"
   id="g153"
   style="fill:url(#meshgradient2569);fill-opacity:1">
   <text
   x="7126.1099"
   y="7355.4102"
   class="fil0 fnt0"
   id="text151"
   style="fill-opacity:1">Repositório Uniritter</text>
  </g>
  <g
   transform="translate(-3910.1836,-1509.2121)"
   id="g157"
   style="fill:url(#meshgradient2583);fill-opacity:1">
   <text
   x="7126.1099"
   y="7355.4102"
   class="fil1 fnt1"
   id="text155"
   style="fill-opacity:1">Tudo em um só lugar</text>
  </g>
  <path
   class="fil2"
   d="m 5295.1664,2373.0379 c -98.45,-75.5 -207.23,-137.51 -322.35,-183.83 -76.78,-30.87 -156.75,-55 -229.18,-95.04 -191.66,-106.08 -309.84,-316.09 -348.15,-531.81 -38.31,-215.66 -5.92,-437.77 43.96,-651.06004 0.47,138.68004 63.24,275.98004 167.82,367.07004 95,82.69 217.2,125.27 332.55,175.93 179.13,78.63 347.94,180.69 500.81,302.72 65.94,52.63 129.47,109.57 179.14,177.76 103.54,142.03 139.88,330.98 96.42,501.3 -42.13,165.1 -163.52,322.69 -321.6,391.33 105.66,-170.42 61,-331.36 -99.42,-454.37 z"
   id="path159"
   style="fill-opacity:1" />
  <path
   class="fil3"
   d="m 5695.4764,1895.3079 c 25.29,-165.81 -38.6,-335.74 -140.13,-469.23 -101.49,-133.49 -237.99,-235.69 -376.11,-330.87 -86.48,-59.52 -175.1,-117.69004 -247.87,-193.29004 -72.8,-75.67 -129.5,-171.94 -136.49,-276.68 -7.03,-104.78 44.3,-216.89 139.24,-261.69 -141.69,33.55 -269.25,129.04 -333.88,259.53 -64.63,130.46 -62.01,294.01 13.92,418.26004 80.2,131.23 225.89,205.46 365.97,268.89 163.36,73.97 331.39,143.4 472.92,253.54 104.03,80.96 162.03,175.5 226.48,290.54 0,0 11.47,15.07 15.95,41 z"
   id="path161"
   style="fill-opacity:1" />
  <path
   class="fil4"
   d="m 5235.7864,1010.2579 c -68.23,-49.14004 -137.02,-98.85004 -193.39,-161.22004 -56.38,-62.41 -100.16,-139.35 -108.6,-223.03 -8.45,-83.68 23.22,-173.95 91.92,-222.42 46.72,-32.99 104.93,-44.21 157.32,-67.14 49.77,-21.73 94.73,-54.36 130.76,-95.04 27.67,-31.22 50.6,-68.47 55.68,-109.89 5.11,-41.38 -10.85,-87.1 -46.39,-108.9 56.9,41.74 114.79,84.53 155.54,142.07 85.05,120.22 74.93,298.73 -23.15,408.55 -43.74,48.96 -103.3,86.57 -129.17,146.89 -29.61,69.04 -6.29,150.53 34.77,213.4 41.06,62.9 98.21,113.42004 145.24,171.98004 17.6,21.94 87.91,110.17 72.71,141.04 -11.96,24.45 -43.78,-13.3 -59.91,-26.67 -90.31,-75 -188.11,-140.97 -283.33,-209.62 z"
   id="path163"
   style="fill-opacity:1" />
  <path
   class="fil5"
   d="m 5353.5364,2652.4679 c -17.83,-108.51 -123.14,-177.94 -221.58,-226.97 -177,-88.16 -367.18,-156.85 -519.37,-283.11 -10.57,67.74 5.83,138.4 37.49,199.15 28.99,55.63 74.07,107.28 124.51,144.53 32.51,24.02 70.17,39.87 105.46,59.54 81.46,45.44 150.88,112.23 199.42,191.88 23.27,38.17 42.08,80.33 45.21,124.96 3.14,44.67 -11.39,92.11 -45.52,121.06 6.77,-5.74 97.82,-5.63 178.42,-101.7 55.34,-65.93 110.94,-138.1 95.96,-229.34 z"
   id="path165"
   style="fill-opacity:1" />
  <path
   class="fil6"
   d="m 4365.6264,2967.0479 c -535.63,-143.87 -1133.02,90.84 -1648.49,-113.77 -12.65,-4.98 -26.03,-10.38 -39.44,-8.05 -10.79,1.87 -20.05,8.54 -28.9,14.99 -181.32,132.58 -362.63,265.19 -543.95,397.76 116.37,-13.64 497.98,2.62 602.56,7.44 203.52,9.42 406.71,25.89 609.12,49.22 407.61,47.06 811.97,122.17 1209.28,224.72 222.98,57.53 440.63,141.92 663.02,196.99 -124.12,-371.3 -447.08,-668.31 -823.2,-769.3 z"
   id="path167"
   style="fill-opacity:1" />
  <path
   class="fil6"
   d="m 4540.0364,2986.9479 c -299.95,-124.47 -630.53,-152.9 -955.21,-159.75 -220.84,-4.66 -460.61,-6.06 -634.76,-141.95 81.85,-9.45 162.11,-32.7 236.33,-68.52 30.83,51.29 90.85,76.56 148.22,93.53 282.07,83.18 585.9,42.52 875.43,94.12 376.43,67.13 720.71,297.81 925.93,620.42 37.99,59.7 74.8,135.87 91.25,220.39 -55.38,-130.75 -180.89,-292.87 -243.48,-358.7 -123.8,-130.28 -278.13,-230.79 -443.71,-299.54 z"
   id="path169"
   style="fill-opacity:1" />
  <path
   class="fil6"
   d="m 4320.0264,2711.7079 c -143.67,-30.77 -300.69,-33.76 -446.72,-50 -71.15,-7.93 -142.61,-17.64 -210.45,-40.5 -67.83,-22.82 -132.4,-59.72 -178.4,-114.58 58.78,6.42 119.16,-2.5 173.6,-25.61 6.13,26.08 25.39,47.03 46.11,63.93 57.11,46.66 129.22,71.58 201.77,84.88 72.56,13.25 146.57,15.76 219.99,22.64 191.69,18.06 386.09,69.5 547.28,178.01 44.95,30.24 140.28,109.97 177.13,149.87 -160.23,-137.91 -355.09,-231.14 -530.31,-268.64 z"
   id="path171"
   style="fill-opacity:1" />
  <path
   class="fil2"
   d="m 5227.2264,3864.5479 c 0,0 -1279.05,-492.76 -3211.68,-498.23 l -180.66,131.41 c 0,0 1616.41,-153.32 3392.34,366.82 z"
   id="path173"
   style="fill-opacity:1" />
  <path
   class="fil4"
   d="m 6088.8564,2970.2179 c 535.59,-143.86 1132.98,90.84 1648.46,-113.77 12.67,-5.01 26.04,-10.41 39.44,-8.04 10.8,1.86 20.07,8.53 28.89,14.95 181.33,132.61 362.66,265.19 543.99,397.8 -116.42,-13.7 -498.02,2.58 -602.58,7.44 -203.56,9.42 -406.72,25.86 -609.14,49.21 -407.6,47.02 -811.96,122.14 -1209.26,224.69 -222.99,57.58 -440.65,141.96 -663.03,197.02 124.13,-371.33 447.06,-668.3 823.23,-769.3 z"
   id="path175"
   style="fill-opacity:1" />
  <path
   class="fil4"
   d="m 5914.4464,2990.1079 c 299.93,-124.46 630.52,-152.91 955.18,-159.74 220.84,-4.64 460.62,-6.09 634.75,-142.02 -81.84,-9.38 -162.1,-32.63 -236.32,-68.43 -30.84,51.25 -90.84,76.55 -148.24,93.44 -282.05,83.27 -585.89,42.55 -875.42,94.16 -376.41,67.17 -720.69,297.85 -925.92,620.43 -37.97,59.72 -74.8,135.88 -91.25,220.35 55.4,-130.71 180.88,-292.84 243.49,-358.71 123.79,-130.21 278.1,-230.75 443.73,-299.48 z"
   id="path177"
   style="fill-opacity:1" />
  <path
   class="fil4"
   d="m 6134.4364,2714.8379 c 143.65,-30.72 300.71,-33.75 446.72,-50.03 71.12,-7.85 142.6,-17.59 210.43,-40.41 67.84,-22.84 132.4,-59.73 178.4,-114.59 -58.77,6.42 -119.16,-2.5 -173.6,-25.61 -6.14,26.07 -25.36,46.99 -46.11,63.92 -57.11,46.68 -129.22,71.58 -201.75,84.85 -72.57,13.3 -146.58,15.72 -219.99,22.68 -191.7,18.03 -386.12,69.45 -547.3,177.98 -44.95,30.27 -140.27,109.99 -177.1,149.88 160.2,-137.93 355.07,-231.16 530.3,-268.67 z"
   id="path179"
   style="fill-opacity:1" />
  <path
   class="fil2"
   d="m 5227.2264,3867.6879 c 0,0 1279.04,-492.73 3211.66,-498.2 l 180.69,131.41 c 0,0 -1616.39,-153.31 -3392.35,366.79 z"
   id="path181"
   style="fill-opacity:1" />
  <path
   class="fil5"
   d="m 2741.9764,3577.4879 c 0,0 1389.09,31.32 2485.25,368.31 v 156.74 c 0,0 -588.73,-305.65 -2485.25,-525.05 z"
   id="path183"
   style="fill-opacity:1" />
  <path
   class="fil5"
   d="m 7712.4864,3577.4879 c 0,0 -1389.07,31.32 -2485.26,368.31 v 156.74 c 0,0 588.76,-305.65 2485.26,-525.05 z"
   id="path185"
   style="fill-opacity:1" />
  
 </g>
<script
   id="mesh_polyfill"
   type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
